<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSPY v2004 rel. 3 U (http://www.xmlspy.com) by Mohana Ramaratnam (Washington University) -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:complexType name="LayoutDescription">
		<xs:sequence>
			<xs:element name="Coordinates">
				<xs:complexType>
					<xs:attribute name="originX" type="xs:integer" use="required"/>
					<xs:attribute name="originY" type="xs:integer" use="required"/>
					<xs:attribute name="originZ" type="xs:integer" use="required"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="voxelSize" type="xs:integer" use="required"/>
	</xs:complexType>
	<xs:element name="Layout" type="LayoutDescription"/>
	<xs:element name="CropDetails">
		<xs:annotation>
			<xs:documentation>The information here will be used by the plexiConverter to crop the image</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name="startSlice" type="xs:integer" use="optional"/>
			<xs:attribute name="endSlice" type="xs:integer" use="optional"/>
			<xs:attribute name="X" type="xs:integer" use="required"/>
			<xs:attribute name="Y" type="xs:integer" use="required"/>
			<xs:attribute name="width" type="xs:integer" use="required"/>
			<xs:attribute name="height" type="xs:integer" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="MontageView">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="transverse">
					<xs:complexType>
						<xs:attribute name="start_slice" type="xs:int" use="required"/>
						<xs:attribute name="end_slice" type="xs:int" use="required"/>
						<xs:attribute name="slice_spacing" type="xs:int" use="required"/>
					</xs:complexType>
				</xs:element>
				<xs:element name="sagittal">
					<xs:complexType>
						<xs:attribute name="start_slice" type="xs:int" use="required"/>
						<xs:attribute name="end_slice" type="xs:int" use="required"/>
						<xs:attribute name="slice_spacing" type="xs:int" use="required"/>
					</xs:complexType>
				</xs:element>
				<xs:element name="coronal">
					<xs:complexType>
						<xs:attribute name="start_slice" type="xs:int" use="required"/>
						<xs:attribute name="end_slice" type="xs:int" use="required"/>
						<xs:attribute name="slice_spacing" type="xs:int" use="required"/>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="scale" type="xs:float" use="optional" default="1"/>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="SchemaLinkType">
		<xs:attribute name="element" type="xs:string" use="required"/>
		<xs:attribute name="value" type="xs:string" use="optional"/>
	</xs:complexType>
	<xs:element name="Viewer">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="PlexiViewer" maxOccurs="unbounded">
					<xs:complexType>
						<xs:complexContent>
							<xs:extension base="PlexiViewerType">
								<xs:attribute name="sessionType" type="xs:string" use="required"/>
							</xs:extension>
						</xs:complexContent>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="PlexiViewerType">
		<xs:sequence>
			<xs:element name="DefaultLoResType" type="xs:string"/>
			<xs:element name="ThumbnailArchiveLocation" type="xs:string"/>
			<xs:element name="LoResArchiveLocation" type="xs:string"/>
			<xs:element name="CacheLocation" type="xs:string"/>
			<xs:element ref="Layout" maxOccurs="unbounded"/>
			<xs:element name="ViewableItem" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>A collection of images which are viewable. A reconstructed image for a scan may also be viewable. The attribute type will correspond to type/code for the scan/reconstructed image/assessor </xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="SchemaLink" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Match the ELEMENT.FIELD to the viewable-Item.ID</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:complexContent>
									<xs:extension base="SchemaLinkType"/>
								</xs:complexContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="UserInterface">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="LinkedDropDown" minOccurs="0" maxOccurs="unbounded">
										<xs:complexType>
											<xs:attribute name="viewableItemType" type="xs:string" use="required"/>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
								<xs:attribute name="selectionPriority" type="xs:int" use="optional"/>
								<xs:attribute name="displayText" type="xs:string" use="optional"/>
								<xs:attribute name="allowedToChooseFiles" type="xs:boolean" use="optional" default="false"/>
								<xs:attribute name="allowedToChooseID" type="xs:boolean" use="optional" default="false"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="Thumbnail" minOccurs="0">
							<xs:complexType>
								<xs:sequence>
									<xs:element ref="CropDetails" minOccurs="0"/>
									<xs:element name="Slice" maxOccurs="unbounded">
										<xs:complexType>
											<xs:attribute name="number" type="xs:int" use="required"/>
											<xs:attribute name="orientation" type="xs:string" use="required"/>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
								<xs:attribute name="converterClassName" type="xs:string" use="required"/>
								<xs:attribute name="format" type="xs:string" use="required"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="Lo-Res" minOccurs="0" maxOccurs="unbounded">
							<xs:complexType>
								<xs:sequence>
									<xs:element ref="CropDetails" minOccurs="0"/>
									<xs:element ref="MontageView"/>
									<xs:element name="Parameter" minOccurs="0" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>Keep track of parameters that might have to be passed in order to convert. EG Dbar and Asigma images need a scaleFactor in order to convert into 8 bit.</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:attribute name="attribute" type="xs:string" use="required"/>
											<xs:attribute name="value" type="xs:string" use="required"/>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
								<xs:attribute name="type" type="xs:string" use="required"/>
								<xs:attribute name="converterClassName" type="xs:string" use="required"/>
								<xs:attribute name="format" type="xs:string" use="required"/>
							</xs:complexType>
						</xs:element>
						<xs:element name="Hi-Res" minOccurs="0">
							<xs:annotation>
								<xs:documentation>The class (formatConverterClassName) will convert the Hi-Res image from one format to the other. Eg MPRAGE images are converted to 4dfp using imato4dfp</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Layer" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>The attribute num will decide the layer on which the image gets inserted. For only one image/layer put only one entry. </xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:complexContent>
												<xs:extension base="SchemaLinkType">
													<xs:attribute name="num" type="xs:int" use="required"/>
												</xs:extension>
											</xs:complexContent>
										</xs:complexType>
									</xs:element>
									<xs:element name="LayoutRef">
										<xs:complexType>
											<xs:attribute name="name" type="xs:string" use="required"/>
										</xs:complexType>
									</xs:element>
									<xs:element ref="MontageView"/>
								</xs:sequence>
								<xs:attribute name="formatConverterClass" type="xs:string" use="optional"/>
								<xs:attribute name="format" type="xs:string" use="required"/>
								<xs:attribute name="minIntensity" type="xs:float" use="optional"/>
								<xs:attribute name="maxIntensity" type="xs:float" use="optional"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="type" type="xs:string" use="required"/>
					<xs:attribute name="imageViewerClassName" type="xs:string" use="optional"/>
					<xs:attribute name="displayCondition" type="xs:string"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
</xs:schema>
