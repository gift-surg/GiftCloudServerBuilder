<!-- Title: Mock REST Calls -->
<script type="text/javascript">
    var hasDirtied = false;
</script>
<div class="mgmt_container">
    <div id="mockRestConfig_mgmt_div">
        <p>
            This manages mock REST call URLs and return values. Currently you can configure this by
            specifying the desired URL, a pipe or OR character ('|'), and the resulting value to be
            returned as JSON. This version supports <i>no</i> parameter substitution or wild-carding,
            i.e. the result will be returned literally and parameters in the REST URL will be ignored.
        </p>
        <p><label for="restMockCallMap">Map:</label></p>
        <textarea id="restMockCallMap" name="restMockCallMap" rows="20" cols="80" onkeypress="if (!hasDirtied) { window.mockRestConfigManager.dirtyForm(); hasDirtied = true; }" disabled></textarea>
    </div>
    <div class="buttons">
        <input type="button" class="submit" value="Save" name="eventSubmit_doPerform" id="mockRestConfig_save_button" onclick="window.mockRestConfigManager.saveTabSettings();"/>&nbsp;
        <input type="button" class="reset" value="Reset" name="eventSubmit_doReset" id="mockRestConfig_reset_button" onclick="window.mockRestConfigManager.resetForm();" disabled/>
    </div>
</div>


<script type="text/javascript">
function configurationRestMockCallConfigTabChange(obj) {
    if(obj.newValue.get("href")=="#mockRestConfig") {
        if(window.mockRestConfigManager==undefined) {
                window.mockRestConfigManager = new SettingsTabManager('mockRestConfig_mgmt_div', 'mockRestConfig');
        }
    }
}

function addRestMockCallConfigMgmtMonitor(){
    if(window.configurationTabView.get("activeTab").get("href")=="#mockRestConfig") {
        if(window.mockRestConfigManager==undefined) {
                window.mockRestConfigManager = new SettingsTabManager('mockRestConfig_mgmt_div', 'mockRestConfig');
        }
    } else {
        window.configurationTabView.subscribe("activeTabChange", configurationRestMockCallConfigTabChange);
    }
}

YAHOO.util.Event.onDOMReady(addRestMockCallConfigMgmtMonitor);
    putConfigurationControls('mockRestConfig', ['restMockCallMap']);
</script>
