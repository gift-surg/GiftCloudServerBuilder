<!-- Title: Security -->
<div class="mgmt_container">

    <div id="security_mgmt_div">

        <script>

            function makeDirty(){
                if (window.securityManager) {
                    window.securityManager.dirtyForm();
                }
            }

            function changePasswordExpirationType(){
                makeDirty();
                // using double underscores for jQuery object vars
                var __interval_span = jq('#passwordExpirationIntervalSpan');
                var __date_span = jq('#passwordExpirationDateSpan');
                if (jq('input[name="passwordExpirationType"]:checked').val() == 'Interval'){
                    __interval_span.show();
                    __date_span.hide();
                } else {
                    __interval_span.hide();
                    __date_span.show();
                }
            }

            function validatePasswordExpiration() {
                makeDirty();
                // using double underscores for jQuery object vars
                var __interval = jq('#passwordExpirationInterval');
                var __date = jq('#passwordExpirationDate');
                var use_interval = true;
                var valid_date = true ;
                var check_date ;
                if (jq('input[name="passwordExpirationType"]:checked').val() === 'Interval'){
                    if (!__interval.val()) {
                        __interval.val('0');
                    }
                }
                else {
                    // check the value of the Expiration Date input using US format
                    check_date = XNAT.app.checkDateInput(__date,'us');
                    valid_date = check_date.valid ;
                    use_interval = false ;
                }
                if (use_interval && !__interval.val().match(/^\d+$/)) {
                    xModalMessage('Note','The password expiration interval must consist only of digits.','OK',{action:function(){__interval.val('').focus()}});
                    return false ;
                }
                else if (!valid_date){
                    return false ;    
                }
                else {
                    if (!__date.val() || __date.val() == '__/__/____' || __date.val() == '  /  /    ') {
                        // is it better to put in zeros or 01/01/1970?
                        // answer: 01/01/1970 - then it won't freak out if using the interval
                        __date.val('01/01/1970');
                        window.securityManager.saveTabSettings();
                    }
                    else {
                        window.securityManager.saveTabSettings();
                    }
                }
            }

        </script>

        <p>
            <label for="enableCsrfToken">Enable CSRF Token?</label>
            <input type="checkbox" id="enableCsrfToken" onchange="makeDirty();" />
            <small>Should this site require the use of a token to prevent CSRF attacks on POST, PUT, and DELETEs?</small>
            <br/>
            <label for="enableCsrfEmail">Enable CSRF Email Alerts?</label>
            <input type="checkbox" id="enableCsrfEmail" onchange="makeDirty();" />
            <small>Should this site send an email to the site admin whenever a CSRF attack is attempted?</small>
        </p>

        <p>
            <label for="restrictUserListAccessToAdmins" style="width: 290px;">Restrict user list access to site administrators?</label>
            <input type="checkbox" id="restrictUserListAccessToAdmins" onchange="makeDirty();" />
            <small>
                Should this site restrict access to the list of system users to site administrators only? If turned on,
                the site is more secure, but this restricts project owners from being able to administer users in their
                projects directly.
            </small>
        </p>

        <p>
            <label for="requireSaltedPasswords" style="width: 290px;">Require passwords to be salted?</label>
            <input type="checkbox" id="requireSaltedPasswords" onchange="makeDirty();" />
            <small>
                Should this site require that all stored user passwords have been salted? If turned on, the site will
                store passwords more securely, but some users may be prompted to change their current passwords so
                that they can be updated.
            </small>
        </p>

        <div class="row">
            ## yeah, it's a table. so sue me.
            <table style="display:inline-block;" cellspacing=0 cellpadding=0>
                <tr>
                    <td style="white-space:nowrap;vertical-align:top;padding-right:20px;">
                        <label for="passwordExpiration" style="width:auto;white-space:nowrap;">Password Expiration</label>
                    </td>
                    <td style="white-space:nowrap;vertical-align:top;padding-right:10px;">
                        <input type="radio" name="passwordExpirationType" id="passwordExpirationTypeInterval" value="Interval" onchange="changePasswordExpirationType();" checked="checked">
                        <label for="passwordExpirationTypeInterval" style="width:50px;">&nbsp;Interval</label>
                        <br/>
                        <input type="radio" name="passwordExpirationType" id="passwordExpirationTypeDate" value="Date" onchange="changePasswordExpirationType();">
                        <label for="passwordExpirationTypeDate" style="width:50px;">&nbsp;Date</label>
                    </td>
                    <td style="vertical-align:top;">
                        <span id="passwordExpirationIntervalSpan">
                        <input size="30" type="text" id="passwordExpirationInterval" onchange="makeDirty();"/>
                            <small>The maximum duration (in days) that a user's password will function before it is considered to have expired and must be changed. Set as 0 to disable password expiration.</small>
                        </span>
                        <span id="passwordExpirationDateSpan" style="display: none;">
                            <span class="datepicker single us today" data-value="" data-validate="onblur" data-input-id="passwordExpirationDate" data-input-name="passwordExpirationDate"></span>
                            <script type="text/javascript">
                                jq(function(){
                                    var __datepicker = jq('#passwordExpirationDateSpan').find('.datepicker');
                                    XNAT.app.datePicker.init(__datepicker);
                                    ##insertCalendar(document.getElementById("passwordExpirationDate"), "Password Expiration Date");
                                    ##jq('#cal_passwordExpirationDate').style.verticalAlign='bottom';
                                    jq('#passwordExpirationDateSpan').on('change focus','#passwordExpirationDate',function(){makeDirty()});
                                    jq('#passwordExpirationDateSpan').on('click','a.selector, a.today',function(){makeDirty()});
                                });
                            </script>
                            ##<input type="text" id="passwordExpirationDate" name="passwordExpirationDate" onchange="window.securityManager.dirtyForm();" onblur="validateExpirationDate()"/>
                            ##<script type="text/javascript">insertCalendar(document.getElementById("passwordExpirationDate"), "Password Expiration Date"); jq('#cal_passwordExpirationDate').style.verticalAlign='bottom';</script>
                            <small>All passwords created or set before this date will be considered to have expired and must be changed.
                                Useful in circumstances when mass changes in password policy are put into effect.
                                Dates should be formatted MM/DD/YYYY.</small>
                        </span>
                        <style>#cal_passwordExpirationDate, #passwordExpirationDate { vertical-align: bottom }</style>
                    </td>
                </tr>
            </table>

        </div>


    </div>
    <div class="buttons">
        <input type="button" class="submit" value="Save" name="eventSubmit_doPerform" id="security_save_button" onclick="validatePasswordExpiration();"/>
        <input type="button" class="reset" value="Reset" name="eventSubmit_doReset" id="security_reset_button" onclick="window.securityManager.resetForm();" disabled/>
    </div>
</div>


<script type="text/javascript">

    function configurationSecurityTabChange(obj) {
        if(obj.newValue.get("href")=="#security") {
            if(window.securityManager==undefined) {
                window.securityManager = new SettingsTabManager('security_mgmt_div', 'security');
            }
        }
    }

    function addSecurityMgmtMonitor(){
        if(window.configurationTabView.get("activeTab").get("href")=="#security") {
            if(window.securityManager==undefined) {
                window.securityManager = new SettingsTabManager('security_mgmt_div', 'security');
            }
        } else {
            window.configurationTabView.subscribe("activeTabChange", configurationSecurityTabChange);
        }
    }

    YAHOO.util.Event.onDOMReady(addSecurityMgmtMonitor);
    putConfigurationControls('security', ['enableCsrfToken', 'enableCsrfEmail', 'restrictUserListAccessToAdmins', 'requireSaltedPasswords', 'passwordExpirationType', 'passwordExpirationInterval', 'passwordExpirationDate']);

</script>
